% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/testsParametric.R
\name{testOverdispersionParametric}
\alias{testOverdispersionParametric}
\title{Parametric overdispersion test}
\usage{
testOverdispersionParametric(model, method = c("residual", "var"),
  alternative = c("greater", "two.sided", "less"), ...)
}
\arguments{
\item{model}{a fitted model object. See details for possible models}

\item{method}{which test to use. For alternatives,}

\item{alternative}{which direction to test. Options are "greater", "two.sided", "less"}

\item{...}{further options for the particular methods}
}
\description{
This function implements a parametric dispersion test based on comparing the residual deviance to the residual degrees of freedom that is commonly used, with the purpose of benchmarking against the nonparametric tests of DHARMA
}
\details{
**Method residual** The residual method follows the general GLM wisdom that we can define a dispersion parameter as residual deviance / residual degrees of freedom. For a model with correct dispersion, this parameter

1. Should be on average 1
2. Be chi2 distributed with df = rdf

For GL(M)Ms, we have to answer three questions

1. What is the residual deviance
2. What are the rdf
3. Is the distribution still chisq

There are quite a few implementations of this idea, e.g. https://stat.ethz.ch/pipermail/r-sig-mixed-models/2011q1/015392.html (implemented in blmeco::dispersion_glmer), http://glmm.wikidot.com/faq, and the code from Harrison, X. A. Using observation-level random effects to model overdispersion in count data in ecology and evolution PeerJ, 2014, 2, e616 
 
The implementation here follows the suggestion in http://glmm.wikidot.com/faq, which is based on dividing the pearson residuals by the (probably not completely accurate) rdf, and testing this against a chi2 distribution with df = rdf. 

**Method var** corresponds to the overdispersion test by Cameron & Trivedi (1990), implemented in the R package AER. The version here only slightly modifieds the AER function. The idea is that, in a Poisson model, the variance should equal the mean, i.e. we have a null hypothesis H0: E(Y) = Var(Y) = μ. The tests compares this against the alternative assumption Var(Y)=μ+c∗f(μ) where the constant c<0 means underdispersion and c>0 means overdispersion. The coefficient c is estimated with a regression and tested with the corresponding t (or z) statistic. Common specifications of the transformation function trafo are f(μ) = mu^2 or f(μ) = mu. The former corresponds to a negative binomial (NB) model with quadratic variance function (called NB2 by Cameron and Trivedi, 2005), the latter to a NB model with linear variance function (called NB1 by Cameron and Trivedi, 2005) or quasi-Poisson model with dispersion parameter. By default, for trafo = NULL, the latter dispersion formulation is used. Otherwise, trafo can either be specified as a function or an integer corresponding to the function function(x) x^trafo, such that trafo = 1 and trafo = 2 yield the linear and quadratic formulations respectively.
}
\seealso{
\code{\link{testSimulatedResiduals}}, \code{\link{testSimulatedResiduals}}, \code{\link{testZeroInflation}}, \code{\link{testTemporalAutocorrelation}}, \code{\link{testSpatialAutocorrelation}}
}
